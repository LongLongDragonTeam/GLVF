# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.14'
    windows:
      imageName: 'vs2017-win2016'

trigger:
- master

pool:
  vmImage: $(imageName)

steps:
- task: CMake@1
  inputs:
      cmakeArgs: 

- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'build'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'
  
- task: Xcode@5
  inputs:
    actions: 'build'
    packageApp: false

- task: codecoveragecomparerbt@1
  inputs:
    codecoveragetarget: '85'
    codecoveragemeasurementmethod: 'Blocks'
- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'GitHub - Deecellar'
    repositoryName: 'LongLongDragonTeam/GLVF'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    tagPattern: 'release-v0.*'
    isPreRelease: true
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'issueBased'